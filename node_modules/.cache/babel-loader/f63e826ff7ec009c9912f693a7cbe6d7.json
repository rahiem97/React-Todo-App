{"ast":null,"code":"var _jsxFileName = \"/Users/rahiemthompson/Desktop/Training/Projects/my-todo/src/App_Class.js\";\nimport React, { createRef, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends React.Component {\n  //This.state has 2 objects \n  //currentTodo which is an empty string for the purpose\n  //todo which is an array that \n  constructor() {\n    super();\n\n    this.addTodo = e => {\n      //Prevent the default opporation from happening \n      e.preventDefault(); //Create a copy of the array to work with \n      //Push the currentToDO this shouldnt be empty \n\n      let newTodoArray = this.state.todos.slice(0);\n      newTodoArray.push(this.state.currentTodo); //update the todo Array with the new array newTodoArray\n\n      this.setState({\n        todos: newTodoArray\n      }); //Set the focus back to the text input field and clear the input field\n\n      this.inputElement.current.focus();\n      this.inputElement.current.value = '';\n    };\n\n    this.onChangeTodo = e => {\n      this.setState({\n        currentTodo: e.target.value\n      });\n    };\n\n    this.deleteTodo = index => {\n      // create a new array and slice the current todos array fromthe first item to the last item passed into our index.\n      // Concatinate that sliced array with another another sliced array at the index spot +1\n      // Essentially when the delete todo is called with index 5 newTodoArray becomes array 0-4 + 6-(length of full todo list) omitting position 5\n      let newTodoArray = this.state.todos.slice(0, index).concat(this.state.todos.slice(index + 1, this.state.todos.length)); //Set the state to the new array.\n\n      this.setState({\n        todos: newTodoArray\n      });\n    };\n\n    this.inputElement = createRef();\n    this.state = {\n      currentTodo: '',\n      todos: []\n    };\n  } //Add an event to the array \n\n\n  //Render the components with the webpage \n  render() {\n    return (//JSX\n      React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignContent: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: this.inputElement,\n        type: \"text\",\n        onChange: this.onChangeTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"+\"))), React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.todos.map((todo, index) => {\n        return React.createElement(\"li\", {\n          onClick: () => this.deleteTodo(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, todo);\n      })))))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rahiemthompson/Desktop/Training/Projects/my-todo/src/App_Class.js"],"names":["React","createRef","useState","App","Component","constructor","addTodo","e","preventDefault","newTodoArray","state","todos","slice","push","currentTodo","setState","inputElement","current","focus","value","onChangeTodo","target","deleteTodo","index","concat","length","render","display","alignContent","justifyContent","flexDirection","map","todo"],"mappings":"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","sourcesContent":["import React, {createRef, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n  //This.state has 2 objects \n  //currentTodo which is an empty string for the purpose\n  //todo which is an array that \n  constructor() {\n    super()\n    this.inputElement = createRef()\n    this.state = {\n      currentTodo: '',\n      todos: []\n    }\n  }\n  //Add an event to the array \n  addTodo = (e) => {\n    //Prevent the default opporation from happening \n    e.preventDefault()\n    //Create a copy of the array to work with \n    //Push the currentToDO this shouldnt be empty \n    let newTodoArray = this.state.todos.slice(0)\n    newTodoArray.push(this.state.currentTodo)\n    //update the todo Array with the new array newTodoArray\n    this.setState({\n      todos: newTodoArray\n    })\n    //Set the focus back to the text input field and clear the input field\n    this.inputElement.current.focus()\n    this.inputElement.current.value = ''\n  }\n\n  //update the todo string to hold the value of the string passed into it \n  onChangeTodo = (e) => {\n    this.setState({\n      currentTodo: e.target.value\n    })\n  }\n\n  //This is a pretty complex line here but i feel we can break it down\n  //Understand what slice() and concat() javascript functions are doing\n  deleteTodo = (index) => {\n    // create a new array and slice the current todos array fromthe first item to the last item passed into our index.\n    // Concatinate that sliced array with another another sliced array at the index spot +1\n    // Essentially when the delete todo is called with index 5 newTodoArray becomes array 0-4 + 6-(length of full todo list) omitting position 5\n    let newTodoArray = this.state.todos.slice(0, index).concat(this.state.todos.slice(index + 1, this.state.todos.length))\n    //Set the state to the new array.\n    this.setState({\n      todos: newTodoArray\n    })\n  }\n\n  //Render the components with the webpage \n  render () {\n    return (\n      //JSX\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div style={{display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\n        <form onSubmit={this.addTodo}>\n            <input ref={this.inputElement} type='text' onChange={this.onChangeTodo}></input>\n            <button type=\"submit\">+</button>\n          </form>\n          </div>\n          <div style={{display:'flex', justifyContent: 'center', flexDirection: 'column'}}>\n            <ol>\n            {\n              this.state.todos.map( (todo, index) => {\n                return <li onClick={() => this.deleteTodo(index)}>{todo}</li>\n              })\n            }\n            </ol>\n          </div>\n        </header>\n      </div>\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}